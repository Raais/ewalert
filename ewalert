#!/bin/bash

###   Uncomment >>> session="" <<< according to your current session    ###

#session="gnome-session" #          Ubuntu/GNOME
#session="mate-session" #           Ubuntu/MATE
#session="xfce4-session" #          XFCE
#session="lxsession" #              LXDE
#session="cinnamon-session" #       Cinammon

### Others: ls /usr/bin/*session ###

cache=$HOME/.cache/ewcache

if [ ! -v DBUS_SESSION_BUS_ADDRESS ]; then
  #Exporting DBUS_SESSION_BUS_ADDRESS variable for cron (libnotify)
  pid=$(pgrep -u $LOGNAME $session | head -1)
  eval "export $(\grep -z DBUS_SESSION_BUS_ADDRESS /proc/$pid/environ | tr '\0' '\n')"
fi

if [ "$1" = "-t" ]; then
  #Test if it works in shell and cron: ewalert -t
  notify-send "Earthquake Warning" "Just a test :)" --urgency=critical --icon=dialog-warning
  exit 1
fi

if [ "$1" = "-x" ]; then
  #Clear cache
  rm -f -- $cache
  exit 1
fi

#Fetch significant earthquakes data (https://earthquake.usgs.gov/earthquakes/feed/v1.0/geojson.php)
#Past hour
url="https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/significant_hour.geojson"
resp=$(curl -s "$url" | jq '.')
rescount=$(jq '.metadata.count' <<< "$resp")

if [ "$rescount" -gt 0 ]
then
    for (( c=0; c<"$rescount"; c++ ))
    do
        title=$(curl -s "$url" | jq -r ".features[$c].properties.title")
        code=$(curl -s "$url" | jq -r ".features[$c].properties.code")
        timest=$(date -d @"$(curl -s "$url" | jq -r ".features[$c].properties.time")" +%X)
        if [ -f "$cache" ]; then
            #Ignoring if already alerted
            if ! grep -Fxq "$code" $cache; then
                notify-send "Earthquake Warning" "$title\n$timest" --urgency=critical --icon=dialog-warning
                echo $code >> $cache
            fi
        else
            #First run
            notify-send "Earthquake Warning" "$title\n$timest" --urgency=critical --icon=dialog-warning
            echo $code >> $cache
        fi
    done
fi
